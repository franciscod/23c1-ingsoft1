

----QUIT----(20 March 2023 11:15:29) CuisUniversity-5706.image priorSource: 4313282!

----STARTUP---- (20 March 2023 11:15:29) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5706.image!


----QUIT----(20 March 2023 11:15:30) CuisUniversity-5706.image priorSource: 8712809!

----STARTUP---- (5 June 2023 19:27:37) as /home/julia/Documents/Inge1/SmallTalk/TusLibros/CuisUniversity-5706.image!


TestCase subclass: #TusLibrosTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #TusLibrosTest category: 'TusLibros' stamp: 'JV 6/5/2023 19:28:43'!
TestCase subclass: #TusLibrosTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Carrito category: 'TusLibros' stamp: 'JV 6/5/2023 19:30:38'!
Object subclass: #Carrito
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibrosTest methodsFor: 'no messages' stamp: 'JV 6/5/2023 19:30:33'!
test01unCarritoNuevoNoTieneContenidos
	| carrito |
	carrito := Carrito new.
	self assert: OrderedCollection new equals: carrito verContenido.! !

!testRun: #TusLibrosTest #test01unCarritoNuevoNoTieneContenidos stamp: 'JV 6/5/2023 19:30:41'!
ERROR!
!Carrito methodsFor: 'accessing' stamp: 'JV 6/5/2023 19:30:50'!
verContenido
	self shouldBeImplemented.! !
!Carrito methodsFor: 'accessing' stamp: 'JV 6/5/2023 19:31:24' prior: 50603967!
verContenido
	^OrderedCollection new.! !

!testRun: #TusLibrosTest #test01unCarritoNuevoNoTieneContenidos stamp: 'JV 6/5/2023 19:31:25'!
PASSED!

!testRun: #TusLibrosTest #test01unCarritoNuevoNoTieneContenidos stamp: 'JV 6/5/2023 19:31:25'!
PASSED!
!TusLibrosTest methodsFor: 'as yet unclassified' stamp: 'JV 6/5/2023 19:34:29'!
test01aNewCartHasNoContents
	| carrito |
	carrito := Carrito new.
	self assert: OrderedCollection new equals: carrito verContenido.! !

!methodRemoval: TusLibrosTest #test01unCarritoNuevoNoTieneContenidos stamp: 'JV 6/5/2023 19:34:29'!
test01unCarritoNuevoNoTieneContenidos
	| carrito |
	carrito := Carrito new.
	self assert: OrderedCollection new equals: carrito verContenido.!
!TusLibrosTest methodsFor: 'as yet unclassified' stamp: 'JV 6/5/2023 19:34:48' prior: 50603982!
test01aNewCartHasNoContents
	| cart |
	cart := Carrito new.
	self assert: OrderedCollection new equals: cart viewContent.! !

!classRenamed: #Carrito as: #Cart stamp: 'JV 6/5/2023 19:34:54'!
Smalltalk renameClassNamed: #Carrito as: #Cart!
!TusLibrosTest methodsFor: 'as yet unclassified' stamp: 'JV 6/5/2023 19:34:54' prior: 50603997!
test01aNewCartHasNoContents
	| cart |
	cart := Cart new.
	self assert: OrderedCollection new equals: cart viewContent.! !
!Cart methodsFor: 'accessing' stamp: 'JV 6/5/2023 19:35:12'!
viewContent
	^OrderedCollection new.! !

!methodRemoval: Cart #verContenido stamp: 'JV 6/5/2023 19:35:12'!
verContenido
	^OrderedCollection new.!
!TusLibrosTest methodsFor: 'as yet unclassified' stamp: 'JV 6/5/2023 19:38:01' prior: 50604008!
test01aNewCartHasNoContents
	| cart aClientID aPassword |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	self assert: OrderedCollection new equals: cart viewContent.! !

!testRun: #TusLibrosTest #test01aNewCartHasNoContents stamp: 'JV 6/5/2023 19:38:06'!
ERROR!
!Cart class methodsFor: 'class initialization' stamp: 'JV 6/5/2023 19:38:13'!
for: aClientID withPassword: aPassword 
	self shouldBeImplemented.! !
!Cart class methodsFor: 'class initialization' stamp: 'JV 6/5/2023 19:38:43' prior: 50604035!
for: aClientID withPassword: aPassword 
	^self new! !

!testRun: #TusLibrosTest #test01aNewCartHasNoContents stamp: 'JV 6/5/2023 19:38:45'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartHasNoContents stamp: 'JV 6/5/2023 19:38:45'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartHasNoContents stamp: 'JV 6/5/2023 19:38:51'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartHasNoContents stamp: 'JV 6/5/2023 19:38:51'!
PASSED!

!classDefinition: #Book category: 'TusLibros' stamp: 'JV 6/5/2023 19:40:13'!
Object subclass: #Book
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibrosTest methodsFor: 'as yet unclassified' stamp: 'JV 6/5/2023 19:40:09'!
test01aCartWithOneBookShowsBookAsContents
	| cart aClientID aPassword book |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	book := Book new.
	cart addBook: book.
	self assert: OrderedCollection new equals: cart viewContent.! !

!testRun: #TusLibrosTest #test01aCartWithOneBookShowsBookAsContents stamp: 'JV 6/5/2023 19:40:16'!
ERROR!
!Cart methodsFor: 'adding' stamp: 'JV 6/5/2023 19:40:28'!
addBook: book 
	self shouldBeImplemented.! !

!classDefinition: #Cart category: 'TusLibros' stamp: 'JV 6/5/2023 19:40:51'!
Object subclass: #Cart
	instanceVariableNames: 'books'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'adding' stamp: 'JV 6/5/2023 19:40:49' prior: 50604078!
addBook: aBook 
	books add: aBook.! !

!testRun: #TusLibrosTest #test01aCartWithOneBookShowsBookAsContents stamp: 'JV 6/5/2023 19:40:53'!
ERROR!

!testRun: #TusLibrosTest #test01aCartWithOneBookShowsBookAsContents stamp: 'JV 6/5/2023 19:41:02'!
ERROR!

!testRun: #TusLibrosTest #test01aNewCartHasNoContents stamp: 'JV 6/5/2023 19:41:02'!
PASSED!

!testRun: #TusLibrosTest #test01aCartWithOneBookShowsBookAsContents stamp: 'JV 6/5/2023 19:41:02'!
ERROR!
!Cart methodsFor: 'accessing' stamp: 'JV 6/5/2023 19:41:35' overrides: 16920235!
initialize
	books := OrderedCollection new.! !

!testRun: #TusLibrosTest #test01aCartWithOneBookShowsBookAsContents stamp: 'JV 6/5/2023 19:41:36'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartHasNoContents stamp: 'JV 6/5/2023 19:41:36'!
PASSED!
!TusLibrosTest methodsFor: 'as yet unclassified' stamp: 'JV 6/5/2023 19:41:45'!
test02aCartWithOneBookShowsBookAsContents
	| cart aClientID aPassword book |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	book := Book new.
	cart addBook: book.
	self assert: OrderedCollection new equals: cart viewContent.! !

!methodRemoval: TusLibrosTest #test01aCartWithOneBookShowsBookAsContents stamp: 'JV 6/5/2023 19:41:45'!
test01aCartWithOneBookShowsBookAsContents
	| cart aClientID aPassword book |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	book := Book new.
	cart addBook: book.
	self assert: OrderedCollection new equals: cart viewContent.!
!TusLibrosTest methodsFor: 'as yet unclassified' stamp: 'JV 6/5/2023 19:44:58'!
test02aCartWithTwoBookShowsBookAsContents
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	cart addBook: book.
	self assert: OrderedCollection new equals: cart viewContent.! !

!testRun: #TusLibrosTest #test02aCartWithTwoBookShowsBookAsContents stamp: 'JV 6/5/2023 19:45:03'!
ERROR!
!Book class methodsFor: 'class initialization' stamp: 'JV 6/5/2023 19:45:09'!
for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity 
	self shouldBeImplemented.! !
!Book class methodsFor: 'class initialization' stamp: 'JV 6/5/2023 19:45:28' prior: 50604161!
for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity 
	^self new.! !

!testRun: #TusLibrosTest #test02aCartWithTwoBookShowsBookAsContents stamp: 'JV 6/5/2023 19:45:29'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartHasNoContents stamp: 'JV 6/5/2023 19:45:29'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookShowsBookAsContents stamp: 'JV 6/5/2023 19:45:29'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithTwoBookShowsBookAsContents stamp: 'JV 6/5/2023 19:45:29'!
PASSED!

!methodRemoval: TusLibrosTest #test02aCartWithOneBookShowsBookAsContents stamp: 'JV 6/5/2023 19:45:35'!
test02aCartWithOneBookShowsBookAsContents
	| cart aClientID aPassword book |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	book := Book new.
	cart addBook: book.
	self assert: OrderedCollection new equals: cart viewContent.!

!testRun: #TusLibrosTest #test01aNewCartHasNoContents stamp: 'JV 6/5/2023 19:45:38'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithTwoBookShowsBookAsContents stamp: 'JV 6/5/2023 19:45:38'!
PASSED!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:48:06'!
test03aCartWithTwoBookShowsBookAsContents
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	cart addBook: book.
	self assert: OrderedCollection new equals: cart viewContent.! !
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:48:23'!
test02aCartWithOneBookShowsBookAsContent
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	cart addBook: book.
	self assert: OrderedCollection new equals: cart viewContent.! !

!methodRemoval: TusLibrosTest #test02aCartWithTwoBookShowsBookAsContents stamp: 'JV 6/5/2023 19:48:23'!
test02aCartWithTwoBookShowsBookAsContents
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	cart addBook: book.
	self assert: OrderedCollection new equals: cart viewContent.!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:48:33'!
test03aCartWithTwoBooksShowsBooksAsContents
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	cart addBook: book.
	self assert: OrderedCollection new equals: cart viewContent.! !

!methodRemoval: TusLibrosTest #test03aCartWithTwoBookShowsBookAsContents stamp: 'JV 6/5/2023 19:48:33'!
test03aCartWithTwoBookShowsBookAsContents
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	cart addBook: book.
	self assert: OrderedCollection new equals: cart viewContent.!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:50:14' prior: 50604252!
test03aCartWithTwoBooksShowsBooksAsContents
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	
	aCartID := cart.
	aBookIsbn := '987654321'.
	aBookQuantity := 1.
	
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	cart addBook: book.
	self assert: OrderedCollection new equals: cart viewContent.! !
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:50:40' prior: 50604219!
test02aCartWithOneBookShowsBookAsContent
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	cart addBook: book.
	self assert: (OrderedCollection with:book) equals: cart viewContent.! !

!testRun: #TusLibrosTest #test02aCartWithOneBookShowsBookAsContent stamp: 'JV 6/5/2023 19:50:43'!
FAILURE!
!Cart methodsFor: 'accessing' stamp: 'JV 6/5/2023 19:51:14' prior: 50604014!
viewContent
	^books.! !

!testRun: #TusLibrosTest #test01aNewCartHasNoContents stamp: 'JV 6/5/2023 19:51:15'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookShowsBookAsContent stamp: 'JV 6/5/2023 19:51:15'!
PASSED!

!testRun: #TusLibrosTest #test03aCartWithTwoBooksShowsBooksAsContents stamp: 'JV 6/5/2023 19:51:15'!
FAILURE!

!testRun: #TusLibrosTest #test03aCartWithTwoBooksShowsBooksAsContents stamp: 'JV 6/5/2023 19:51:15'!
FAILURE!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:53:41' prior: 50604286!
test03aCartWithTwoBooksShowsBooksAsContents
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID aBookIsbn2 aBookQuantity2 aCartID2 book2 |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	
	aCartID2 := cart.
	aBookIsbn2 := '987654321'.
	aBookQuantity2 := 2.
	
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	book2 := Book for: aCartID2 withIsbn: aBookIsbn2 andQuantity: aBookQuantity2.
	cart addBook: book.
	self assert: (OrderedCollection with: book with: book2) equals: cart viewContent.! !

!testRun: #TusLibrosTest #test03aCartWithTwoBooksShowsBooksAsContents stamp: 'JV 6/5/2023 19:53:47'!
FAILURE!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:54:10' prior: 50604342!
test03aCartWithTwoBooksShowsBooksAsContents
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID aBookIsbn2 aBookQuantity2 aCartID2 book2 |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	
	aCartID2 := cart.
	aBookIsbn2 := '987654321'.
	aBookQuantity2 := 2.
	
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	book2 := Book for: aCartID2 withIsbn: aBookIsbn2 andQuantity: aBookQuantity2.
	cart addBook: book.
	cart addBook: book2.
	self assert: (OrderedCollection with: book with: book2) equals: cart viewContent.! !

!testRun: #TusLibrosTest #test03aCartWithTwoBooksShowsBooksAsContents stamp: 'JV 6/5/2023 19:54:11'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartHasNoContents stamp: 'JV 6/5/2023 19:54:11'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookShowsBookAsContent stamp: 'JV 6/5/2023 19:54:11'!
PASSED!

!testRun: #TusLibrosTest #test03aCartWithTwoBooksShowsBooksAsContents stamp: 'JV 6/5/2023 19:54:11'!
PASSED!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:54:41'!
test01aNewCartIsEmpty
	| cart aClientID aPassword |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	self assert: OrderedCollection new equals: cart viewContent.! !

!methodRemoval: TusLibrosTest #test01aNewCartHasNoContents stamp: 'JV 6/5/2023 19:54:41'!
test01aNewCartHasNoContents
	| cart aClientID aPassword |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	self assert: OrderedCollection new equals: cart viewContent.!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:55:01' prior: 50604406!
test01aNewCartIsEmpty
	| cart aClientID aPassword |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	self assert: cart isEmpty.! !

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 19:55:03'!
ERROR!
!Cart methodsFor: 'accessing' stamp: 'JV 6/5/2023 19:55:11'!
isEmpty
	self shouldBeImplemented.! !
!Cart methodsFor: 'accessing' stamp: 'JV 6/5/2023 19:55:27' prior: 50604436!
isEmpty
	^books isEmpty.! !

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 19:55:28'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 19:55:28'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookShowsBookAsContent stamp: 'JV 6/5/2023 19:55:28'!
PASSED!

!testRun: #TusLibrosTest #test03aCartWithTwoBooksShowsBooksAsContents stamp: 'JV 6/5/2023 19:55:28'!
PASSED!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:55:43'!
test02aCartWithOneBookIsNotEmpty
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	cart addBook: book.
	self assert: (OrderedCollection with:book) equals: cart viewContent.! !

!methodRemoval: TusLibrosTest #test02aCartWithOneBookShowsBookAsContent stamp: 'JV 6/5/2023 19:55:43'!
test02aCartWithOneBookShowsBookAsContent
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	cart addBook: book.
	self assert: (OrderedCollection with:book) equals: cart viewContent.!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:56:43'!
test02aCartsContentIsBooksAdded
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	cart addBook: book.
	self assert: (OrderedCollection with:book) equals: cart viewContent.! !
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:57:14' prior: 50604456!
test02aCartWithOneBookIsNotEmpty
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	
	cart addBook: book.
	
	self deny: cart isEmpty.! !

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/5/2023 19:57:16'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 19:57:16'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/5/2023 19:57:16'!
PASSED!

!testRun: #TusLibrosTest #test02aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 19:57:16'!
PASSED!

!testRun: #TusLibrosTest #test03aCartWithTwoBooksShowsBooksAsContents stamp: 'JV 6/5/2023 19:57:16'!
PASSED!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:57:26'!
test03aCartsContentIsBooksAdded
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	cart addBook: book.
	self assert: (OrderedCollection with:book) equals: cart viewContent.! !

!methodRemoval: TusLibrosTest #test02aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 19:57:26'!
test02aCartsContentIsBooksAdded
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	cart addBook: book.
	self assert: (OrderedCollection with:book) equals: cart viewContent.!

!methodRemoval: TusLibrosTest #test03aCartWithTwoBooksShowsBooksAsContents stamp: 'JV 6/5/2023 19:57:34'!
test03aCartWithTwoBooksShowsBooksAsContents
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID aBookIsbn2 aBookQuantity2 aCartID2 book2 |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	
	aCartID2 := cart.
	aBookIsbn2 := '987654321'.
	aBookQuantity2 := 2.
	
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	book2 := Book for: aCartID2 withIsbn: aBookIsbn2 andQuantity: aBookQuantity2.
	cart addBook: book.
	cart addBook: book2.
	self assert: (OrderedCollection with: book with: book2) equals: cart viewContent.!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:58:35' prior: 50604536!
test03aCartsContentIsBooksAdded
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID aBookIsbn2 aBookQuantity2 aCartID2 book2 |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.

	aCartID2 := cart.
	aBookIsbn2 := '987654321'.
	aBookQuantity2 := 3.
	book2 := Book for: aCartID2 withIsbn: aBookIsbn2 andQuantity: aBookQuantity2.	
	
	cart addBook: book2.
	
	self assert: (OrderedCollection with:book with: book2) equals: cart viewContent.! !

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 19:58:39'!
FAILURE!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 19:58:53' prior: 50604593!
test03aCartsContentIsBooksAdded
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID aBookIsbn2 aBookQuantity2 aCartID2 book2 |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.

	aCartID2 := cart.
	aBookIsbn2 := '987654321'.
	aBookQuantity2 := 3.
	book2 := Book for: aCartID2 withIsbn: aBookIsbn2 andQuantity: aBookQuantity2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (OrderedCollection with:book with: book2) equals: cart viewContent.! !

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 19:58:54'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 19:58:54'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/5/2023 19:58:54'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 19:58:54'!
PASSED!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:00:00' prior: 50604506!
test02aCartWithOneBookIsNotEmpty
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart id.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity.
	
	cart addBook: book.
	
	self deny: cart isEmpty.! !

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/5/2023 20:00:02'!
ERROR!
!Cart methodsFor: 'accessing' stamp: 'JV 6/5/2023 20:00:07'!
id
	self shouldBeImplemented.! !

!classDefinition: #Cart category: 'TusLibros' stamp: 'JV 6/5/2023 20:02:17'!
Object subclass: #Cart
	instanceVariableNames: 'books id'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'accessing' stamp: 'JV 6/5/2023 20:02:15' prior: 50604673!
id
	^id! !
!Cart methodsFor: 'accessing' stamp: 'JV 6/5/2023 20:03:24' prior: 50604106 overrides: 16920235!
initialize
	| clientID |
	books := OrderedCollection new.
	id := clientID.
	^id.! !
!Cart class methodsFor: 'class initialization' stamp: 'JV 6/5/2023 20:03:47' prior: 50604041!
for: aClientID withPassword: aPassword 
	^self new initializeFor: aClientID.! !
!Cart methodsFor: 'accessing' stamp: 'JV 6/5/2023 20:04:16'!
initializeFor: aClientID

	books := OrderedCollection new.
	id := aClientID.
	^id.! !
!Cart methodsFor: 'accessing' stamp: 'JV 6/5/2023 20:04:18' prior: 50604698!
initializeFor: aClientID
	books := OrderedCollection new.
	id := aClientID.
	^id.! !

!methodRemoval: Cart #initializeFor: stamp: 'JV 6/5/2023 20:06:11'!
initializeFor: aClientID
	books := OrderedCollection new.
	id := aClientID.
	^id.!
!Cart methodsFor: 'accessing' stamp: 'JV 6/5/2023 20:06:20' prior: 50604687 overrides: 16920235!
initialize
	books := OrderedCollection new.
	! !

!methodRemoval: Cart #id stamp: 'JV 6/5/2023 20:06:28'!
id
	^id!
!Cart class methodsFor: 'class initialization' stamp: 'JV 6/5/2023 20:06:37' prior: 50604693!
for: aClientID withPassword: aPassword 
	^self new.! !
!Book class methodsFor: 'class initialization' stamp: 'JV 6/5/2023 20:07:02'!
withIsbn: aBookIsbn
	^self new.! !

!methodRemoval: Book class #for:withIsbn:andQuantity: stamp: 'JV 6/5/2023 20:07:09'!
for: aCartID withIsbn: aBookIsbn andQuantity: aBookQuantity 
	^self new.!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:07:21' prior: 50604655!
test02aCartWithOneBookIsNotEmpty
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart id.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book withIsbn: aBookIsbn.
	
	cart addBook: book.
	
	self deny: cart isEmpty.! !
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:07:36' prior: 50604619!
test03aCartsContentIsBooksAdded
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID aBookIsbn2 aBookQuantity2 aCartID2 book2 |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book withIsbn: aBookIsbn.

	aCartID2 := cart.
	aBookIsbn2 := '987654321'.
	aBookQuantity2 := 3.
	book2 := Book for: aCartID2 withIsbn: aBookIsbn2 andQuantity: aBookQuantity2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (OrderedCollection with:book with: book2) equals: cart viewContent.! !

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 20:07:42'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/5/2023 20:07:42'!
ERROR!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 20:07:42'!
ERROR!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/5/2023 20:07:44'!
ERROR!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:08:13' prior: 50604736!
test02aCartWithOneBookIsNotEmpty
	| cart aClientID aPassword book aBookIsbn |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart new.
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.
	
	cart addBook: book.
	
	self deny: cart isEmpty.! !

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 20:08:18'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/5/2023 20:08:18'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 20:08:18'!
ERROR!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 20:08:18'!
ERROR!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:08:34' prior: 50604750!
test03aCartsContentIsBooksAdded
	| cart aClientID aPassword book aBookIsbn aBookQuantity aCartID aBookIsbn2 aBookQuantity2 aCartID2 book2 |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart for: aClientID withPassword: aPassword.
	
	aCartID := cart.
	aBookIsbn := '123456789'.
	aBookQuantity := 1.
	book := Book withIsbn: aBookIsbn.

	aCartID2 := cart.
	aBookIsbn2 := '987654321'.
	aBookQuantity2 := 3.
	book2 := Book withIsbn: aBookIsbn2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (OrderedCollection with:book with: book2) equals: cart viewContent.! !

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 20:08:39'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 20:08:40'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/5/2023 20:08:40'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 20:08:40'!
PASSED!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:09:09' prior: 50604807!
test03aCartsContentIsBooksAdded
	| cart aClientID aPassword book aBookIsbn aBookIsbn2 book2 |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart new.
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (OrderedCollection with:book with: book2) equals: cart viewContent.! !

!methodRemoval: Cart class #for:withPassword: stamp: 'JV 6/5/2023 20:09:21'!
for: aClientID withPassword: aPassword 
	^self new.!
!Cart methodsFor: 'accessing' stamp: 'JV 6/5/2023 20:12:34'!
listCart
	^books.! !
!TusLibrosTest methodsFor: 'as yet unclassified' stamp: 'JV 6/5/2023 20:12:34' prior: 50604840!
test03aCartsContentIsBooksAdded
	| cart aClientID aPassword book aBookIsbn aBookIsbn2 book2 |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart new.
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (OrderedCollection with:book with: book2) equals: cart listCart.! !

!methodRemoval: Cart #viewContent stamp: 'JV 6/5/2023 20:12:34'!
viewContent
	^books.!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 20:12:39'!
ERROR!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/5/2023 20:12:39'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 20:12:39'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 20:12:39'!
ERROR!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:12:51' prior: 50604425!
test01aNewCartIsEmpty
	| cart aClientID aPassword |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart new.
	self assert: cart isEmpty.! !

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 20:12:54'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 20:12:55'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/5/2023 20:12:55'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 20:12:55'!
PASSED!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:13:06' prior: 50604894!
test01aNewCartIsEmpty
	| cart aClientID aPassword |
	aClientID := '100'.
	aPassword := '123'.
	cart := Cart new.
	
	self assert: cart isEmpty.! !
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:13:18' prior: 50604913!
test01aNewCartIsEmpty
	| cart |
	cart := Cart new.
	
	self assert: cart isEmpty.! !
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:13:34' prior: 50604784!
test02aCartWithOneBookIsNotEmpty
	| cart book aBookIsbn |
	cart := Cart new.
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.
	
	cart addBook: book.
	
	self deny: cart isEmpty.! !
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:13:53' prior: 50604864!
test03aCartsContentIsBooksAdded
	| cart book aBookIsbn book2 aBookIsbn2 |
	
	cart := Cart new.
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (OrderedCollection with:book with: book2) equals: cart listCart.! !

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 20:13:57'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/5/2023 20:13:57'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 20:13:57'!
PASSED!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:14:52'!
test03checkingOutCartEmptiesContent
	| cart book aBookIsbn book2 aBookIsbn2 |
	
	cart := Cart new.
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (OrderedCollection with:book with: book2) equals: cart listCart.! !
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:32:12'!
test04checkingOutCartEmptiesContent
	| cart book aBookIsbn book2 aBookIsbn2 |
	
	cart := Cart new.
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (OrderedCollection with:book with: book2) equals: cart listCart.! !

!methodRemoval: TusLibrosTest #test03checkingOutCartEmptiesContent stamp: 'JV 6/5/2023 20:32:12'!
test03checkingOutCartEmptiesContent
	| cart book aBookIsbn book2 aBookIsbn2 |
	
	cart := Cart new.
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (OrderedCollection with:book with: book2) equals: cart listCart.!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/5/2023 20:33:13' prior: 50604973!
test04checkingOutCartEmptiesContent
	| cart book aBookIsbn book2 aBookIsbn2 |
	
	cart := Cart new.
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (OrderedCollection with:book with: book2) equals: cart listCart.
	
	cart checkOut.
	
	self assert: cart isEmpty.! !

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/5/2023 20:33:15'!
ERROR!
!Cart methodsFor: 'checkout' stamp: 'JV 6/5/2023 20:33:23'!
checkOut
	self shouldBeImplemented.! !
!Cart methodsFor: 'checkout' stamp: 'JV 6/5/2023 20:33:35' prior: 50605020!
checkOut
	books := OrderedCollection new.! !

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/5/2023 20:33:36'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/5/2023 20:33:36'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/5/2023 20:33:36'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/5/2023 20:33:36'!
PASSED!

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/5/2023 20:33:36'!
PASSED!

----SNAPSHOT----(5 June 2023 20:33:41) CuisUniversity-5706.image priorSource: 8713034!

----STARTUP---- (7 June 2023 19:03:26) as /home/julia/Documents/Inge1/SmallTalk/TusLibros/CuisUniversity-5706.image!

!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/7/2023 19:05:01'!
test05cartsWithSameContentAddedInDifferentOrderAreTheSame
	| cart book aBookIsbn book2 aBookIsbn2 cart2 |
	
	cart := Cart new.
	
	cart2 := Cart new.
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	cart2 addBook: book2.
	cart2 addBook: book.
	
	self assert: cart equals: cart2.
! !

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:05:04'!
FAILURE!

a Cart listCart !

cart listCart !
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/7/2023 19:06:56' prior: 50605050!
test05cartsWithSameContentAddedInDifferentOrderAreTheSame
	| cart book aBookIsbn book2 aBookIsbn2 cart2 |
	
	cart := Cart new.
	
	cart2 := Cart new.
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	cart2 addBook: book2.
	cart2 addBook: book.
	
	self assert: cart listCart equals: cart2 listCart.
! !
!Cart methodsFor: 'accessing' stamp: 'JV 6/7/2023 19:08:06' prior: 50604715 overrides: 16920235!
initialize
	books := Bag new.
	! !

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:08:21'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:08:25'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/7/2023 19:08:25'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/7/2023 19:08:25'!
FAILURE!

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/7/2023 19:08:25'!
FAILURE!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:08:25'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/7/2023 19:08:31'!
FAILURE!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/7/2023 19:09:09' prior: 50604936!
test03aCartsContentIsBooksAdded
	| cart book aBookIsbn book2 aBookIsbn2 |
	
	cart := Cart new.
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (Bag with:book with: book2) equals: cart listCart.! !
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/7/2023 19:09:16' prior: 50605002!
test04checkingOutCartEmptiesContent
	| cart book aBookIsbn book2 aBookIsbn2 |
	
	cart := Cart new.
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (Bag with:book with: book2) equals: cart listCart.
	
	cart checkOut.
	
	self assert: cart isEmpty.! !

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:09:18'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/7/2023 19:09:18'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/7/2023 19:09:18'!
PASSED!

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/7/2023 19:09:18'!
PASSED!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:09:18'!
PASSED!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/7/2023 19:15:28'!
test06cantAddBookToCartThatIsNotInStoresCatalogue
	| cart book aBookIsbn book2 aBookIsbn2 catalogue |
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	catalogue := OrderedCollection with: book.
	
	cart := Cart for: catalogue.
	
	cart addBook: book.
	
	self 
		should: [cart addBook: book2]
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText = 'Cant add books to cart that are not in the store catalogue'].

! !

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:15:33'!
ERROR!
!Cart class methodsFor: 'class initialization' stamp: 'JV 6/7/2023 19:15:50'!
for: catalogue 
	self shouldBeImplemented.! !
!Cart class methodsFor: 'class initialization' stamp: 'JV 6/7/2023 19:16:03' prior: 50605183!
for: aCatalogue 
	self new initializeFor: aCatalogue.! !

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:16:05'!
ERROR!

!classDefinition: #Cart category: 'TusLibros' stamp: 'JV 6/7/2023 19:16:16'!
Object subclass: #Cart
	instanceVariableNames: 'books id catalogue'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cart methodsFor: 'initialization' stamp: 'JV 6/7/2023 19:16:16'!
initializeFor: aCatalogue 
	self shouldBeImplemented.
	catalogue := aCatalogue.! !

!classDefinition: #Catalogue category: 'TusLibros' stamp: 'JV 6/7/2023 19:17:52'!
Object subclass: #Catalogue
	instanceVariableNames: 'books'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/7/2023 19:17:41' prior: 50605160!
test06cantAddBookToCartThatIsNotInStoresCatalogue
	| cart book aBookIsbn book2 aBookIsbn2 catalogue |
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	catalogue := Catalogue with: (Set with: book).
	
	cart := Cart for: catalogue.
	
	cart addBook: book.
	
	self 
		should: [cart addBook: book2]
		raise: Error
		withExceptionDo: [ :error | 
			self assert: error messageText = 'Cant add books to cart that are not in the store catalogue'].

! !

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:17:54'!
ERROR!
!Catalogue class methodsFor: 'class initialization' stamp: 'JV 6/7/2023 19:18:03'!
with: aRenameMe1 
	self shouldBeImplemented.! !
!Catalogue class methodsFor: 'class initialization' stamp: 'JV 6/7/2023 19:18:33' prior: 50605238!
with: aSetOfBooks
	self new initializeWith: aSetOfBooks.! !

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:18:35'!
ERROR!

!classDefinition: #Catalogue category: 'TusLibros' stamp: 'JV 6/7/2023 19:18:43'!
Object subclass: #Catalogue
	instanceVariableNames: 'books setOfBooks'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Catalogue methodsFor: 'initialization' stamp: 'JV 6/7/2023 19:18:43'!
initializeWith: aSetOfBooks 
	self shouldBeImplemented.
	setOfBooks := aSetOfBooks.! !
!Catalogue methodsFor: 'initialization' stamp: 'JV 6/7/2023 19:18:50' prior: 50605258!
initializeWith: aSetOfBooks 
	books := aSetOfBooks.! !

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:18:52'!
ERROR!
!Cart methodsFor: 'adding' stamp: 'JV 6/7/2023 19:20:22' prior: 50604089!
addBook: aBook 
	(catalogue includes: aBook) ifFalse: [self error: ''].
	books add: aBook.! !
!Cart methodsFor: 'adding' stamp: 'JV 6/7/2023 19:20:43' prior: 50605272!
addBook: aBook 
	(catalogue includes: aBook) ifFalse: [self error: 'Cant add books to cart that are not in the store catalogue'].
	books add: aBook.! !

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:20:46'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/7/2023 19:20:46'!
ERROR!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/7/2023 19:20:46'!
ERROR!

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/7/2023 19:20:46'!
ERROR!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:20:46'!
ERROR!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:20:46'!
ERROR!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:20:50'!
ERROR!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:20:50'!
ERROR!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:20:54'!
ERROR!
!Cart class methodsFor: 'class initialization' stamp: 'JV 6/7/2023 19:21:13' prior: 50605188!
for: aCatalogue 
	^self new initializeFor: aCatalogue.! !
!Catalogue class methodsFor: 'class initialization' stamp: 'JV 6/7/2023 19:21:22' prior: 50605243!
with: aSetOfBooks
	^self new initializeWith: aSetOfBooks.! !
!Cart methodsFor: 'initialization' stamp: 'JV 6/7/2023 19:21:45' prior: 50605203!
initializeFor: aCatalogue 
	catalogue := aCatalogue.
	books := Set new.! !
!Cart methodsFor: 'initialization' stamp: 'JV 6/7/2023 19:22:00' prior: 50605326!
initializeFor: aCatalogue 
	catalogue := aCatalogue.
	books := Bag new.! !

!methodRemoval: Cart #initialize stamp: 'JV 6/7/2023 19:22:23'!
initialize
	books := Bag new.
	!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:22:28'!
ERROR!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:22:28'!
ERROR!
!Catalogue methodsFor: 'includes' stamp: 'JV 6/7/2023 19:22:47'!
includes: aBook 
	self shouldBeImplemented.! !
!Catalogue methodsFor: 'includes' stamp: 'JV 6/7/2023 19:23:05' prior: 50605346!
includes: aBook 
	^books includes: aBook.! !

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:23:06'!
PASSED!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:23:08'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:23:10'!
ERROR!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/7/2023 19:23:10'!
ERROR!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/7/2023 19:23:10'!
ERROR!

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/7/2023 19:23:10'!
ERROR!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:23:10'!
ERROR!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:23:10'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:23:12'!
ERROR!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/7/2023 19:23:58' prior: 50604921!
test01aNewCartIsEmpty
	| cart aBookIsbn book catalogue |
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.
	
	catalogue := Catalogue with: (Set with: book).
	
	cart := Cart for: catalogue.
	
	self assert: cart isEmpty.! !

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:24:01'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:24:01'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/7/2023 19:24:01'!
ERROR!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/7/2023 19:24:01'!
ERROR!

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/7/2023 19:24:01'!
ERROR!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:24:01'!
ERROR!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:24:01'!
PASSED!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/7/2023 19:24:28' prior: 50604927!
test02aCartWithOneBookIsNotEmpty
	| cart book aBookIsbn catalogue |
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.
	
	catalogue := Catalogue with: (Set with: book).
	
	cart := Cart for: catalogue.
	
	cart addBook: book.
	
	self deny: cart isEmpty.! !

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/7/2023 19:24:30'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:24:30'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/7/2023 19:24:30'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/7/2023 19:24:30'!
ERROR!

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/7/2023 19:24:30'!
ERROR!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:24:30'!
ERROR!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:24:30'!
PASSED!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/7/2023 19:25:05' prior: 50605115!
test03aCartsContentIsBooksAdded
	| cart book aBookIsbn book2 aBookIsbn2 catalogue |
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	catalogue := Catalogue with: (Set with: book with: book2).
	
	cart := Cart for: catalogue.
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (Bag with:book with: book2) equals: cart listCart.! !

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:25:12'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/7/2023 19:25:12'!
PASSED!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:25:12'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/7/2023 19:25:12'!
PASSED!

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/7/2023 19:25:12'!
ERROR!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:25:12'!
ERROR!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/7/2023 19:25:39' prior: 50605129!
test04checkingOutCartEmptiesContent
	| cart book aBookIsbn book2 aBookIsbn2 |
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (Bag with:book with: book2) equals: cart listCart.
	
	cart checkOut.
	
	self assert: cart isEmpty.! !
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/7/2023 19:26:21' prior: 50605487!
test04checkingOutCartEmptiesContent
	| cart book aBookIsbn book2 aBookIsbn2 catalogue |
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	catalogue := Catalogue with: (Set with: book with: book2).
	
	cart := Cart for: catalogue.
	
	cart addBook: book.
	cart addBook: book2.
	
	self assert: (Bag with:book with: book2) equals: cart listCart.
	
	cart checkOut.
	
	self assert: cart isEmpty.! !

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/7/2023 19:26:23'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:26:23'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/7/2023 19:26:23'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/7/2023 19:26:23'!
PASSED!

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/7/2023 19:26:23'!
PASSED!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:26:23'!
ERROR!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:26:23'!
PASSED!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:26:23'!
ERROR!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:27:20'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/7/2023 19:27:20'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/7/2023 19:27:20'!
PASSED!

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/7/2023 19:27:20'!
PASSED!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:27:20'!
ERROR!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:27:20'!
PASSED!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:27:20'!
ERROR!

catalogue!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:29:20'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/7/2023 19:29:20'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/7/2023 19:29:20'!
PASSED!

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/7/2023 19:29:20'!
PASSED!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:29:20'!
ERROR!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:29:20'!
PASSED!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:29:20'!
ERROR!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/7/2023 19:31:07' prior: 50605071!
test05cartsWithSameContentAddedInDifferentOrderAreTheSame
	| cart book aBookIsbn book2 aBookIsbn2 cart2 catalogue |
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	catalogue := Catalogue with: (Set with: book with: book2).
	
	cart := Cart for: catalogue.
	cart2 := Cart for: catalogue.
		
	cart addBook: book.
	cart addBook: book2.
	
	cart2 addBook: book2.
	cart2 addBook: book.
	
	self assert: cart listCart equals: cart2 listCart.
! !

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:31:10'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:31:10'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/7/2023 19:31:10'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/7/2023 19:31:10'!
PASSED!

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/7/2023 19:31:10'!
PASSED!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:31:10'!
PASSED!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:31:10'!
PASSED!

| cart book aBookIsbn book2 aBookIsbn2 cart2 catalogue |
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	catalogue := Catalogue with: (Set with: book with: book2).
	
	cart := Cart for: catalogue.
	cart2 := Cart for: catalogue.
		
	cart addBook: book.
	cart addBook: book2.
	
	cart2 addBook: book2.
	cart2 addBook: book.
	cart listCart.!
!TusLibrosTest methodsFor: 'testing' stamp: 'JV 6/7/2023 19:33:10' prior: 50605594!
test05cartsWithSameContentAddedInDifferentOrderAreTheSame
	| cart book aBookIsbn book2 aBookIsbn2 cart2 catalogue |
	
	aBookIsbn := '123456789'.
	book := Book withIsbn: aBookIsbn.

	aBookIsbn2 := '987654321'.
	book2 := Book withIsbn: aBookIsbn2.	
	
	catalogue := Catalogue with: (Set with: book with: book2).
	
	cart := Cart for: catalogue.
	cart2 := Cart for: catalogue.
		
	cart addBook: book.
	cart addBook: book2.
	
	cart2 addBook: book2.
	cart2 addBook: book.
	cart listCart.
	
	self assert: cart listCart equals: cart2 listCart.
! !

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:33:11'!
PASSED!

!testRun: #TusLibrosTest #test01aNewCartIsEmpty stamp: 'JV 6/7/2023 19:33:11'!
PASSED!

!testRun: #TusLibrosTest #test02aCartWithOneBookIsNotEmpty stamp: 'JV 6/7/2023 19:33:11'!
PASSED!

!testRun: #TusLibrosTest #test03aCartsContentIsBooksAdded stamp: 'JV 6/7/2023 19:33:11'!
PASSED!

!testRun: #TusLibrosTest #test04checkingOutCartEmptiesContent stamp: 'JV 6/7/2023 19:33:11'!
PASSED!

!testRun: #TusLibrosTest #test05cartsWithSameContentAddedInDifferentOrderAreTheSame stamp: 'JV 6/7/2023 19:33:11'!
PASSED!

!testRun: #TusLibrosTest #test06cantAddBookToCartThatIsNotInStoresCatalogue stamp: 'JV 6/7/2023 19:33:11'!
PASSED!

----SNAPSHOT----(7 June 2023 19:33:19) CuisUniversity-5706.image priorSource: 8748565!

----SNAPSHOT----(7 June 2023 19:35:12) CuisUniversity-5706.image priorSource: 8769353!